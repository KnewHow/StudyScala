[0m[[0m[31merror[0m] [0m[0m/project/studyScala/workspace/scalaWorkspace/scalatestshowtwo/src/test/scala/ShowTableMutableTest.scala:40:13: missing parameter type[0m
[0m[[0m[31merror[0m] [0m[0m    forAll{(action,expectedCount) =>[0m
[0m[[0m[31merror[0m] [0m[0m            ^[0m
[0m[[0m[31merror[0m] [0m[0m/project/studyScala/workspace/scalaWorkspace/scalatestshowtwo/src/test/scala/ShowTableMutableTest.scala:40:20: missing parameter type[0m
[0m[[0m[31merror[0m] [0m[0m    forAll{(action,expectedCount) =>[0m
[0m[[0m[31merror[0m] [0m[0m                   ^[0m
[0m[[0m[31merror[0m] [0m[0m/project/studyScala/workspace/scalaWorkspace/scalatestshowtwo/src/test/scala/ShowTableMutableTest.scala:46:21: overloaded method value should with alternatives:[0m
[0m[[0m[31merror[0m] [0m[0m  (endWithWord: org.scalatest.words.EndWithWord)(implicit ev: Int <:< String)ShowTableMutableObjectsTest.this.ResultOfEndWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (startWithWord: org.scalatest.words.StartWithWord)(implicit ev: Int <:< String)ShowTableMutableObjectsTest.this.ResultOfStartWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (includeWord: org.scalatest.words.IncludeWord)(implicit ev: Int <:< String)ShowTableMutableObjectsTest.this.ResultOfIncludeWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notExist: org.scalatest.words.ResultOfNotExist)(implicit existence: org.scalatest.enablers.Existence[Int])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (existWord: org.scalatest.words.ExistWord)(implicit existence: org.scalatest.enablers.Existence[Int])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (containWord: org.scalatest.words.ContainWord)org.scalatest.words.ResultOfContainWord[Int] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (haveWord: org.scalatest.words.HaveWord)ShowTableMutableObjectsTest.this.ResultOfHaveWordForExtent[Int] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (beWord: org.scalatest.words.BeWord)ShowTableMutableObjectsTest.this.ResultOfBeWordForAny[Int] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[Int])(implicit ev: Numeric[Int])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [U](inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[U])(implicit constraint: org.scalactic.CanEqual[Int,U])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notWord: org.scalatest.words.NotWord)org.scalatest.words.ResultOfNotWordForAny[Int] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_], TYPECLASS2[_]](rightMatcherFactory2: org.scalatest.matchers.MatcherFactory2[Int,TYPECLASS1,TYPECLASS2])(implicit typeClass1: TYPECLASS1[Int], implicit typeClass2: TYPECLASS2[Int])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_]](rightMatcherFactory1: org.scalatest.matchers.MatcherFactory1[Int,TYPECLASS1])(implicit typeClass1: TYPECLASS1[Int])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (rightMatcherX1: org.scalatest.matchers.Matcher[Int])org.scalatest.Assertion[0m
[0m[[0m[31merror[0m] [0m[0m cannot be applied to (org.scalatest.matchers.Matcher[AnyRef])[0m
[0m[[0m[31merror[0m] [0m[0m      counter.count should equal (expectedCount)[0m
[0m[[0m[31merror[0m] [0m[0m                    ^[0m
[0m[[0m[31merror[0m] [0m[0mthree errors found[0m
